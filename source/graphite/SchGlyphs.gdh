////////////////////////////////////////////////////////////////////////////////////////////
//
//	File: SchGlyphs.gdh
//
//	Glyph definitions and attachment points for Scheherazade
//
////////////////////////////////////////////////////////////////////////////////////////////


/*
	This file is part of Scheherazade font family 
	(http://scripts.sil.org/Scheherazade) and is 
	Copyright (c) 1994-2014 SIL International (http://www.sil.org/),
	with Reserved Font Names "Scheherazade" and "SIL".

	This Font Software is licensed under the SIL Open Font License,
	Version 1.1.

	You should have received a copy of the license along with this Font Software.
	If this is not the case, go to (http://scripts.sil.org/OFL) for all the
	details including an FAQ.
*/

environment {AttributeOverride = true};


table(glyph)


cMarksAbove = (cMarksAbove_Gr);  // defined in classes.xml
cMarksBelow = (cMarksBelow_Gr);


/********************************************************/


//------------------------------------------------------------------------------------------
//
// Mirroring
//

g_partialdiff.mirror   {glyph = g_partialdiff_rtl;   isEncoded = 0 };
g_summation.mirror     {glyph = g_summation_rtl;     isEncoded = 0 };
g_radical.mirror       {glyph = g_radical_rtl;       isEncoded = 0 };
g_integral.mirror      {glyph = g_integral_rtl;      isEncoded = 0 };
g_approxequal.mirror   {glyph = g_approxequal_rtl;   isEncoded = 0 };
g_notequal.mirror      {glyph = g_notequal_rtl;      isEncoded = 0 };
// g_divisionslash.mirror {glyph = g_divisionslash_rtl; isEncoded = 0 };

// Used for Graphite-1 style mirroring:

// guillemetleft/right is a bug!!!!

cMirrorOpen  = (g_parenleft  g_less    g_bracketleft  g_braceleft  g_guilsinglleft  g_guillemetleft  g_radical);
cMirrorClose = (g_parenright g_greater g_bracketright g_braceright g_guilsinglright g_guillemetright g_radical_rtl);
// Make sure Unicode 5.0 Corrigendum #6 is applied:
cNoMirror = (g_quotedblbase g_quoteleft g_quoteright g_quotedblleft g_quotedblright) {mirror.glyph = 0; mirror.isEncoded = 0};


//------------------------------------------------------------------------------------------
//
//	Contextual forms
//


// Lowered hamza

cLowHamzaComposed { component {
			base = box(0, bb.bottom, aw, bb.bottom + (bb.height*5)/8);
			hamza = box(0, bb.bottom + (bb.height*5)/8, aw, bb.top) }};
// slight adjustments to components:
g_waw_hamzaabove_ar { component {
	base.top = bb.bottom + (bb.height*3)/4;
	hamza.bottom = bb.bottom + (bb.height*3)/4 }};
g_yeh_hamzaabove_ar { component.hamza.right = aw*3/4 };
g_yeh_hamzaabove_ar_medi { component {
	base.top = bb.bottom + bb.height/2;
	hamza.bottom = bb.bottom + bb.height/2 }};
g_yeh_hamzaabove_ar_fina { component.hamza.right = aw*3/4 };

// Subtending marks

cSignTakes4 = (g_year_ar g_samvat_ar g_numbermark_ar g_pagenumber_ar); // medium

cSignTakes3Medium = (g_year_ar  g_samvat_ar  g_numbermark_ar  g_number_ar  g_pagenumber_ar);
cSignTakes3Small  = (g_endofayah_ar  g_endofayah_ar_alt  g_endofayah_ar_alt_b);

cSignTakes2 = (g_year_ar g_samvat_ar  g_numbermark_ar  g_number_ar  g_pagenumber_ar  g_endofayah_ar  g_endofayah_ar_alt  
	g_endofayah_ar_alt_b	g_footnotemarker_ar); // medium

cSignTakes1 = (g_year_ar g_samvat_ar  g_numbermark_ar g_number_ar g_pagenumber_ar g_endofayah_ar g_endofayah_ar_alt g_endofayah_ar_alt_b
	g_footnotemarker_ar); // medium
	
cSign4 = (g_year_ar_4  g_samvat_ar_4  g_numbermark_ar_4  g_pagenumber_ar_4);
cSign3Medium = (g_year_ar_3 g_samvat_ar_3 g_numbermark_ar_3 g_number_ar_3 g_pagenumber_ar_3);
cSign3Small  = (g_endofayah_ar_3 g_endofayah_ar_alt_3 g_endofayah_ar_alt_b_3);
cSign3 = (cSign3Medium  cSign3Small);
cSign2 = (g_year_ar_2  g_samvat_ar_2 g_numbermark_ar_2 g_number_ar_2 g_pagenumber_ar_2 g_endofayah_ar_2 
	g_endofayah_ar_alt_2 g_endofayah_ar_alt_b_2  g_footnotemarker_ar_2);
cSign1 = (g_year_ar    g_samvat_ar g_numbermark_ar g_number_ar       g_pagenumber_ar   g_endofayah_ar    
	g_endofayah_ar_alt   g_endofayah_ar_alt_b    g_footnotemarker_ar);


cSignAll = (cSign1 cSign2 cSign3 cSign4);

cSignDigit = (cDigitsArabicMedium cDigitsArabicSmall 
			  cDigitsEasternMedium cDigitsEasternSmall 
			  cDigitsLatinMedium cDigitsLatinSmall) ;



//------------------------------------------------------------------------------------------
//
//	Feature-related variants
//

cDownward = (g_comma_ar_downward  g_semicolon_ar_downward);
cno_Downward = (g_comma_ar  g_semicolon_ar);

cSixNine = (g_dammatan_ar_six_nine);
cno_SixNine = (g_dammatan_ar);

cno_Sukun = (g_sukun_ar);
cSukunDownOpen = (g_sukun_ar_down_open);
cSukunLeftOpen = (g_marksidewaysnoonghunna_ar);

cno_OpenLeft = (g_hahabove_ar);
cOpenLeft = (g_marksidewaysnoonghunna_ar);

cno_LargeAlef = (g_alefabove_ar);
cLargeAlef = (g_alefabove_ar_large);

cNoDots = (g_yeh_ar_no_dots  g_yeh_ar_no_dots_init  g_yeh_ar_no_dots_medi  g_yeh_ar_no_dots_fina);
cno_NoDots = (g_yeh_ar  g_yeh_ar_init  g_yeh_ar_medi  g_yeh_ar_fina);

// The next three class must match for substitution:

cEasternDigit = (
	g_four_persian         g_six_persian         g_seven_persian
	g_four_persian_medium  g_six_persian_medium  g_seven_persian_medium
	g_four_persian_small   g_six_persian_small   g_seven_persian_small
);
	
cEasternDigitUrdu = (
	g_four_persian_urdu         g_six_persian_urdu         g_seven_persian_urdu
	g_four_persian_urdu_medium  g_six_persian_urdu_medium  g_seven_persian_urdu_medium
	g_four_persian_urdu_small   g_six_persian_urdu_small   g_seven_persian_urdu_small
);

cEasternDigitSindhi = (
	g_four_persian         g_six_persian_urdu         g_seven_persian_urdu
	g_four_persian_medium  g_six_persian_urdu_medium  g_seven_persian_urdu_medium
	g_four_persian_small   g_six_persian_urdu_small   g_seven_persian_urdu_small
);

cEasternDigitRohingya = (
	g_four_persian_roh         g_six_persian_urdu         g_seven_persian_urdu
	g_four_persian_roh_medium  g_six_persian_urdu_medium  g_seven_persian_urdu_medium
	g_four_persian_roh_small   g_six_persian_urdu_small   g_seven_persian_urdu_small
);

	

cno_Heh     = (g_heh_ar           g_heh_ar_init         g_heh_ar_medi              g_heh_ar_fina);
cHehSindhi  = (g_heh_ar_knotted   g_heh_ar_init         g_heh_ar_knotted_high_medi g_heh_ar_knotted_high_fina);
cHehUrdu    = (g_heh_ar           g_heh_ar_hooked_init  g_heh_ar_hooked_medi       g_heh_ar_hooked_fina);
cHehKurdish = (g_heh_ar_knotted   g_heh_ar_init         g_heh_ar_medi              g_heh_ar_knotted_high_fina);

cEndOfAyah        = (g_endofayah_ar        g_endofayah_ar_2        g_endofayah_ar_3);
cEndOfAyahCircle  = (g_endofayah_ar_alt    g_endofayah_ar_alt_2    g_endofayah_ar_alt_3);
cEndOfAyahSquare  = (g_endofayah_ar_alt_b  g_endofayah_ar_alt_b_2  g_endofayah_ar_alt_b_3);

zeroWidthJoiner = postscript("zerowidthjoiner");
zeroWidthNonJoiner = postscript("zerowidthnonjoiner");
leftToRightMark = postscript("lefttorightmark") {directionality = 1};
rightToLeftMark = postscript("righttoleftmark") {directionality = 2};
leftToRightEmbedding = postscript("lefttorightembedding") {directionality = 13};
rightToLeftEmbedding = postscript("righttoleftembedding") {directionality = 14};
popDirectionalFormatting = postscript("popdirectionalformatting") {directionality = 15};
leftToRightOverride = postscript("lefttorightoverride") {directionality = 11};
rightToLeftOverride = postscript("righttoleftoverride") {directionality = 12};
leftToRightIsolate = postscript("lefttorightisolate") {directionality = 17} ;
rightToLeftIsolate = postscript("righttoleftisolate") {directionality = 18} ;
firstStrongIsolate = postscript("firststrongisolate") {directionality = 19} ;
popDirectionalIsolate = postscript("popdirectionalisolate") {directionality = 20} ;
//arabicLetterMark = postscript("arabiclettermark") {directionality = 3} ;

cInvisible = (zeroWidthJoiner zeroWidthNonJoiner leftToRightMark rightToLeftMark leftToRightEmbedding
rightToLeftEmbedding popDirectionalFormatting leftToRightOverride rightToLeftOverride
leftToRightIsolate rightToLeftIsolate firstStrongIsolate popDirectionalIsolate /*arabicLetterMark*/);

zeroWidthSpace = postscript("zerowidthspace");


//------------------------------------------------------------------------------------------
//
// UTR53
//
// Not a full implementation. 
// Define groups based on combining class and whether they are Modifier Combining Marks (MCM) according to UTR53

// Desired order: cUTR53_220MCM cUTR53_230MCM cUTR53_shadda cUTR53_fixedPos cUTR53_alef cUTR53_220other cUTR53_230other
// Technically we should also sort the fixedPos but unlikely to have more than one of these

cUTR53_1      = (cUTR53_220MCM) ;
cUTR53_1_skip = (cUTR53_230MCM cUTR53_shadda cUTR53_fixedPos cUTR53_alef cUTR53_230other) ;

cUTR53_2      = (cUTR53_230MCM) ;
cUTR53_2_skip = (cUTR53_shadda cUTR53_fixedPos cUTR53_alef cUTR53_220other) ;

// NB: There may still be MCM on our right ... ones that 
cUTR53_3      = (cUTR53_shadda) ;
cUTR53_3_skip = (cUTR53_fixedPos cUTR53_alef cUTR53_220other cUTR53_230other) ;
cUTR53_3_ctx  = (cUTR53_fixedPos cUTR53_alef cUTR53_220other cUTR53_230other cUTR53_220MCM cUTR53_230MCM) ;

cUTR53_4      = (cUTR53_fixedPos) ;
cUTR53_4_skip = (cUTR53_alef cUTR53_220other cUTR53_230other) ;
cUTR53_4_ctx  = (cUTR53_alef cUTR53_220other cUTR53_230other cUTR53_220MCM cUTR53_230MCM) ;

cUTR53_5      = (cUTR53_alef) ;
cUTR53_5_skip = (cUTR53_220other cUTR53_230other) ;
cUTR53_5_ctx  = (cUTR53_220other cUTR53_230other cUTR53_220MCM cUTR53_230MCM) ;

cUTR53_6      = (cUTR53_220other cUTR53_220MCM) ;       // Not actually needed b/c attachment will handle these
cUTR53_6_skip = (cUTR53_230other cUTR53_230MCM) ;


//------------------------------------------------------------------------------------------
//
//	Marks
//

// Add 034F Combining Grapheme Joiner to autogenerated classes for mark attachment:
cnalefDia += g_graphemejoinercomb ;
cndiaADia += g_graphemejoinercomb ;
cndiaBDia += g_graphemejoinercomb ;

// marks that can combine with vowel marks:
cMark1Above = (cMarkGroup1A);

cMark1Below = (cMarkGroup1B);

// vowels
cMark2Above = (cMarkGroup2A cMarkGroup3A);

cMark2Below = (cMarkGroup2B);

// Maddah is different from hamza and shadda in that it goes above the vowels, but below the quranic
// marks. However, Jonathan warns that this behavior may need to change someday.
cMark3Above = (cMarkGroup4A);

// (no marks below that behave like maddah)

// quranic marks
cMark4Above = (cMarkGroup5A);

cMark4Below = (cMarkGroup3B);

cMark1 = (cMark1Above cMark1Below);
cMark2 = (cMark2Above cMark2Below);
cMark3 = (cMark3Above);
cMark4 = (cMark4Above cMark4Below);

cAnyMarks = (cMark1 cMark2 cMark3 cMark4);
cAnyMarksAbove = (cMark1Above cMark2Above cMark3Above cMark4Above);
cAnyMarksBelow = (cMark1Below cMark2Below cMark4Below);

cMark234 = (cMark2 cMark3 cMark4);
cMark34  = (cMark3 cMark4);


// Not used by Graphite:
/***
// TODO: define the components for these ligatures
cShaddaMarks = (absFathatan absDammatan absFatha 
	absDamma absSuperscriptAlef);
cShaddaLigatures = (absShaddaFathatan absShaddaDammatan absShaddaFatha  
	absShaddaDamma absShaddaAlef);

cHamzaMarks = (absDamma absFatha);
cHamzaLigatures = (absHamzaDamma absHamzaFatha);
***/

// Cursive attachment

cHasExit  = (cLamIniBeforeAlef   cLamMedBeforeAlef  );
cHasEntry = (cAlefFinAfterLamIni cAlefFinAfterLamMed);

endtable; // glyph

endenvironment;
